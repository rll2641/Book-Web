-- 사용자 등급 테이블
CREATE TABLE `user_grade` (
    `GRADE_ID` INT NOT NULL AUTO_INCREMENT,
    `GRADE_NAME` VARCHAR(30) NOT NULL DEFAULT 'BRONZE'
    CHECK (`GRADE_NAME` IN ('BRONZE', 'SILVER', 'GOLD', 'PLATINUM')),
    `MIN_USAGE` INT NULL,
    `ORDER_COUNT` INT NULL,
    `DISCOUNT` FLOAT NULL,
    `MILEAGE_RATE` FLOAT NULL,
    `CREATED_AT` TIMESTAMP(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    `UPDATED_AT` TIMESTAMP(0) NULL ON UPDATE CURRENT_TIMESTAMP,
    `UPDATED_BY` INT NULL,
    PRIMARY KEY (`GRADE_ID`)
);

-- 관리자 테이블
CREATE TABLE `admin` (
    `ADMIN_ID` INT NOT NULL AUTO_INCREMENT,
    `ADMIN_NAME` VARCHAR(30) NULL,
    `ADMIN_IDS` VARCHAR(30) NULL,
    `ADMIN_PASSWORD` VARCHAR(30) NULL,
    `CREATED_AT` TIMESTAMP(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (`ADMIN_ID`)
);

-- 도서 테이블
CREATE TABLE `books` (
    `BOOK_ID` INT NOT NULL AUTO_INCREMENT,
    `BOOK_NAME` VARCHAR(300) NULL,
    `BOOK_PUBLISHER` VARCHAR(300) NULL,
    `BOOK_AUTHOR` VARCHAR(300) NULL,
    `BOOK_DESCRIPTION` VARCHAR(3000) NULL,
    `BOOK_LINK` VARCHAR(255) NULL,
    `BOOK_PUBDATE` DATE NULL,
    `BOOK_DISCOUNT` INT NULL,
    `BOOK_IMAGE_PATH` VARCHAR(100) NULL,
    `BOOK_ISBN` VARCHAR(30) NULL,
    `BOOK_QUANTITY` INT NULL,
    `UPDATED_BY` INT NULL,
    `CREATED_AT` TIMESTAMP(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    `UPDATED_AT` TIMESTAMP(0) NULL ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (`BOOK_ID`)
);

-- 사용자 테이블
CREATE TABLE `user` (
    `USER_ID` INT NOT NULL AUTO_INCREMENT,
    `GRADE_ID` INT NOT NULL,
    `USER_EMAIL` VARCHAR(30) NULL,
    `USER_PASSWORD` VARCHAR(30) NULL,
    `USER_NAME` VARCHAR(30) NULL,
    `USER_PHONE` VARCHAR(30) NULL,
    `USER_STATUS` VARCHAR(50) NOT NULL DEFAULT 'ACTIVE'
    CHECK (`USER_STATUS` IN ('ACTIVE', 'INACTIVE', 'DEACTIVE')),
    `POINT` INT NULL,
    `POSTCODE` INT NULL,
    `DEFAULT_ADDRESS` VARCHAR(200) NULL,
    `DETAIL_ADDRESS` VARCHAR(200) NULL,
    `CITY` VARCHAR(50) NULL,
    `PROVINCE` VARCHAR(50) NULL,
    `LAST_LOGIN` TIMESTAMP(0) NULL,
    `CREATED_AT` TIMESTAMP(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    `UPDATED_AT` TIMESTAMP(0) NULL ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (`USER_ID`),
    FOREIGN KEY (`GRADE_ID`) REFERENCES `user_grade` (`GRADE_ID`)
);

-- 주문 테이블
CREATE TABLE `orders` (
    `ORDER_ID` INT NOT NULL AUTO_INCREMENT,
    `USER_ID` INT NOT NULL,
    `ORDER_STATUS` VARCHAR(30) NOT NULL DEFAULT 'ORDER_READY'
    CHECK (`ORDER_STATUS` IN ('ORDER_READY', 'ORDER_PROCESSING', 'SHIPPED', 'DELIVERED')),
    `TOTAL_PRICE` INT NULL,
    `ORDER_DAY` DATE NULL,
    `ORDER_DATE` TIMESTAMP(0) NULL,
    `CREATED_AT` TIMESTAMP(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    `UPDATED_AT` TIMESTAMP(0) NULL ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (`ORDER_ID`),
    FOREIGN KEY (`USER_ID`) REFERENCES `user` (`USER_ID`)
);

-- 주문 도서 테이블
CREATE TABLE `order_book` (
    `ORDER_BOOK_ID` INT NOT NULL AUTO_INCREMENT,
    `ORDER_ID` INT NOT NULL,
    `BOOK_ID` INT NOT NULL,
    `QUANTITY` INT NULL,
    `PRICE` INT NULL,
    PRIMARY KEY (`ORDER_BOOK_ID`),
    FOREIGN KEY (`ORDER_ID`) REFERENCES `orders` (`ORDER_ID`),
    FOREIGN KEY (`BOOK_ID`) REFERENCES `books` (`BOOK_ID`)
);

-- 리뷰 테이블
CREATE TABLE `review` (
    `REVIEW_ID` INT NOT NULL AUTO_INCREMENT,
    `BOOK_ID` INT NOT NULL,
    `USER_ID` INT NOT NULL,
    `REVIEW_CONTENT` VARCHAR(255) NULL,
    `REVIEW_SCORE` FLOAT NULL,
    `REVIEW_STATUS` VARCHAR(30) NULL,
    `CREATED_AT` TIMESTAMP(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    `UPDATED_AT` TIMESTAMP(0) NULL ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (`REVIEW_ID`),
    FOREIGN KEY (`BOOK_ID`) REFERENCES `books` (`BOOK_ID`),
    FOREIGN KEY (`USER_ID`) REFERENCES `user` (`USER_ID`)
);

-- 장바구니 테이블
CREATE TABLE `cart` (
    `CART_ID` INT NOT NULL AUTO_INCREMENT,
    `BOOK_ID` INT NOT NULL,
    `USER_ID` INT NOT NULL,
    `CREATED_AT` TIMESTAMP(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    `UPDATED_AT` TIMESTAMP(0) NULL ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (`CART_ID`),
    FOREIGN KEY (`BOOK_ID`) REFERENCES `books` (`BOOK_ID`),
    FOREIGN KEY (`USER_ID`) REFERENCES `user` (`USER_ID`)
);

-- 관리 로그 테이블
CREATE TABLE `manage_log` (
    `LOG_ID` INT NOT NULL AUTO_INCREMENT,
    `ADMIN_ID` INT NOT NULL,
    `BOOK_ID` INT NOT NULL,
    `USER_ID` INT NOT NULL,
    `ACTION_TYPE` VARCHAR(30) NULL,
    `BEFORE_DATA` JSON NULL,
    `AFTER_DATA` JSON NULL,
    `CREATED_AT` TIMESTAMP(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (`LOG_ID`),
    FOREIGN KEY (`ADMIN_ID`) REFERENCES `admin` (`ADMIN_ID`),
    FOREIGN KEY (`BOOK_ID`) REFERENCES `books` (`BOOK_ID`),
    FOREIGN KEY (`USER_ID`) REFERENCES `user` (`USER_ID`)
);